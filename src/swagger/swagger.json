{
  "openapi": "3.0.0",
  "info": {
    "title": "FundooNotes API",
    "version": "1.0.0",
    "description": "API documentation for the FundooNotes application"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Invalid request body" }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate a user and return a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users/getAllUsers": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all registered users",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of users retrieved successfully" },
          "403": { "description": "Unauthorized access" }
        }
      }
    },
    "/notes/create": {
      "post": {
        "summary": "Create a new note",
        "description": "Creates a new note for the authenticated user",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" },
                  "userId": { "type": "string" }
                },
                "required": ["title", "content", "userId"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Note created successfully" },
          "400": { "description": "Bad request" }
        }
      }
    },
    "/notes/allNotes": {
      "get": {
        "summary": "Get all notes",
        "description": "Retrieve all notes from the database",
        "responses": {
          "200": { "description": "Successfully retrieved notes" },
          "404": { "description": "No notes found" }
        }
      }
    },
    "/notes/noteByUser": {
      "get": {
        "summary": "Get notes by user",
        "description": "Retrieve all notes created by a specific user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the user whose notes should be retrieved"
          }
        ],
        "responses": {
          "200": { "description": "List of notes retrieved successfully" },
          "404": { "description": "No notes found for the user" }
        }
      }
    },
    "/notes/{_id}": {
      "put": {
        "summary": "Update a note",
        "description": "Update a specific note's details",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the note to update"
          }
        ],
        "responses": {
          "200": { "description": "Note updated successfully" },
          "404": { "description": "Note not found" }
        }
      },
      "delete": {
        "summary": "Delete a note",
        "description": "Move a note to trash instead of permanently deleting it",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the note to delete"
          }
        ],
        "responses": {
          "200": { "description": "Note moved to trash successfully" },
          "404": { "description": "Note not found" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}